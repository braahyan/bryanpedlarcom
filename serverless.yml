# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: bryanpedlarcom # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python2.7

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

custom:
  domainName: bryanpedlar.com

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

#functions:
#  hello:
#    handler: handler.hello

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    DNS: 
      Type: "AWS::Route53::HostedZone"
      Properties: 
        HostedZoneConfig: 
          Comment: "My hosted zone for ${self:custom.domainName}"
        Name: ${self:custom.domainName}
    bryanpedlarcombucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.domainName}
        WebsiteConfiguration: 
          IndexDocument: "index.html"
          ErrorDocument: "error.html"
    wwwbryanpedlarcombucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: www.${self:custom.domainName}
        WebsiteConfiguration:
          RedirectAllRequestsTo:
            HostName: ${self:custom.domainName}
            Protocol: http
    bryanpedlarcombucketPolicy: 
      DependsOn: bryanpedlarcombucket
      Type: "AWS::S3::BucketPolicy"
      Properties: 
        Bucket: 
          Ref: "bryanpedlarcombucket"
        PolicyDocument: 
          Statement: 
            - 
              Action: 
                - "s3:GetObject"
              Effect: "Allow"
              Resource: 
                Fn::Join: 
                  - ""
                  - 
                    - "arn:aws:s3:::"
                    - 
                      Ref: "bryanpedlarcombucket"
                    - "/*"
              Principal: "*"
    wwwbryanpedlarcombucketPolicy: 
      DependsOn: wwwbryanpedlarcombucket
      Type: "AWS::S3::BucketPolicy"
      Properties: 
        Bucket: 
          Ref: "wwwbryanpedlarcombucket"
        PolicyDocument: 
          Statement: 
            - 
              Action: 
                - "s3:GetObject"
              Effect: "Allow"
              Resource: 
                Fn::Join: 
                  - ""
                  - 
                    - "arn:aws:s3:::"
                    - 
                      Ref: "wwwbryanpedlarcombucket"
                    - "/*"
              Principal: "*"
    myDNS:
      DependsOn: DNS
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneName: ${self:custom.domainName}.
        Comment: Zone apex alias.
        RecordSets:
        - 
          Name: ${self:custom.domainName}
          Type: A
          AliasTarget:
            HostedZoneId: Z3AQBSTGFYJSTF
            DNSName: s3-website-us-east-1.amazonaws.com
        -
          Name: www.${self:custom.domainName}
          Type: CNAME
          TTL: 60
          ResourceRecords:
          - ${self:custom.domainName}
  Mappings:
    RegionMap:
      us-east-1:
        S3hostedzoneID: Z3AQBSTGFYJSTF
        websiteendpoint: s3-website-us-east-1.amazonaws.com
      us-west-1:
        S3hostedzoneID: Z2F56UZL2M1ACD
        websiteendpoint: s3-website-us-west-1.amazonaws.com
      us-west-2:
        S3hostedzoneID: Z3BJ6K6RIION7M
        websiteendpoint: s3-website-us-west-2.amazonaws.com
      eu-west-1:
        S3hostedzoneID: Z1BKCTXD74EZPE
        websiteendpoint: s3-website-eu-west-1.amazonaws.com
      ap-southeast-1:
        S3hostedzoneID: Z3O0J2DXBE1FTB
        websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
      ap-southeast-2:
        S3hostedzoneID: Z1WCIGYICN2BYD
        websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
      ap-northeast-1:
        S3hostedzoneID: Z2M4EHUR26P7ZW
        websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
      sa-east-1:
        S3hostedzoneID: Z31GFT0UA1I2HV
        websiteendpoint: s3-website-sa-east-1.amazonaws.com