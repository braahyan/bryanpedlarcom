service: bryanpedlarcom # NOTE: update this with your service name

plugins:
  - serverless-s3website

provider:
  name: aws
  runtime: python2.7

custom:
  domainName: bryanpedlar.com
  site_bucket: ${self:custom.domainName}
  site_dir: site

package:
  exclude:
    - site/**
    - node_modules/**

#functions:
#  hello:
#    handler: handler.hello

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    DNS: 
      Type: "AWS::Route53::HostedZone"
      Properties: 
        HostedZoneConfig: 
          Comment: "My hosted zone for ${self:custom.domainName}"
        Name: ${self:custom.domainName}
    bryanpedlarcombucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.domainName}
        WebsiteConfiguration: 
          IndexDocument: "index.html"
          ErrorDocument: "error.html"
    wwwbryanpedlarcombucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: www.${self:custom.domainName}
        WebsiteConfiguration:
          RedirectAllRequestsTo:
            HostName: ${self:custom.domainName}
            Protocol: http
    bryanpedlarcombucketPolicy: 
      DependsOn: bryanpedlarcombucket
      Type: "AWS::S3::BucketPolicy"
      Properties: 
        Bucket: 
          Ref: "bryanpedlarcombucket"
        PolicyDocument: 
          Statement: 
            - 
              Action: 
                - "s3:GetObject"
              Effect: "Allow"
              Resource: 
                Fn::Join: 
                  - ""
                  - 
                    - "arn:aws:s3:::"
                    - 
                      Ref: "bryanpedlarcombucket"
                    - "/*"
              Principal: "*"
    wwwbryanpedlarcombucketPolicy: 
      DependsOn: wwwbryanpedlarcombucket
      Type: "AWS::S3::BucketPolicy"
      Properties: 
        Bucket: 
          Ref: "wwwbryanpedlarcombucket"
        PolicyDocument: 
          Statement: 
            - 
              Action: 
                - "s3:GetObject"
              Effect: "Allow"
              Resource: 
                Fn::Join: 
                  - ""
                  - 
                    - "arn:aws:s3:::"
                    - 
                      Ref: "wwwbryanpedlarcombucket"
                    - "/*"
              Principal: "*"
    myDNS:
      DependsOn: DNS
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneName: ${self:custom.domainName}.
        Comment: Zone apex alias.
        RecordSets:
        - 
          Name: ${self:custom.domainName}
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: 
              "Fn::GetAtt": [ myCDN, DomainName ]
        -
          Name: www.${self:custom.domainName}
          Type: CNAME
          TTL: 60
          ResourceRecords:
          - ${self:custom.domainName}
    mycert:
      DependsOn: bryanpedlarcombucket
      Type: AWS::CertificateManager::Certificate
      Properties:
        DomainName: ${self:custom.domainName}
        SubjectAlternativeNames:
          - www.${self:custom.domainName}
    myCDN:
      DependsOn: mycert
      Type: "AWS::CloudFront::Distribution"
      Properties:
        DistributionConfig:
          Origins:
          - DomainName: ${self:custom.domainName}.s3.amazonaws.com
            Id: myS3Origin
            S3OriginConfig:
              OriginAccessIdentity: ""
          Enabled: 'true'
          Comment: Some comment
          DefaultRootObject: index.html
          Aliases:
          - ${self:custom.domainName}
          - www.${self:custom.domainName}
          DefaultCacheBehavior:
            AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
            TargetOriginId: myS3Origin
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          PriceClass: PriceClass_200
          ViewerCertificate:
            AcmCertificateArn: 
              Ref: mycert
            SslSupportMethod: sni-only
